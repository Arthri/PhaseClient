import CorePageModel from 'phase/pagemodel';
import Client from 'phasemobile/client';
import { MobileSwipe, Direction } from 'phasemobile/mobileswipe';
import ElementIdentifiers from 'phase/elementidentifiers';
import * as $ from 'jquery';

class PageModel extends CorePageModel {
    private swipe: MobileSwipe;

    constructor(client: Client) {
        super(client);

        let phaseElem = document.getElementById('phase');
        if (phaseElem != null) {
            this.swipe = new MobileSwipe(phaseElem);
            this.swipe.addHandler((element, direction) => {
                switch (direction) {
                    case Direction.LEFT:
                        this.handleSwipeLeft();
                        break;
                    case Direction.RIGHT:
                        this.handleSwipeRight()
                        break;
                }
            });
        }
    }

    /* Handles mobile swiping to the left */
    private handleSwipeLeft(): void {
        $(ElementIdentifiers.DiscussionSection.main).css("display", "none");
    }

    /* Handles mobile swiping to the right */
    private handleSwipeRight(): void {
        $(ElementIdentifiers.DiscussionSection.main).css("display", "block");
    }
}

export default PageModel;