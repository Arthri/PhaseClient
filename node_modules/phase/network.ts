import * as SocketCluster from 'socketcluster-client';
import Client from 'phase/client';
import Socket from 'phase/socket';
import SetInformation from 'phase/messagetypes/setinformation';

class Network {
    socket: Socket;
    client: Client;

    constructor(client: Client, options: Object) {
        this.client = client;
        this.socket = SocketCluster.connect(options);
        this.socket.on('connect', () => {
            this.socket.emit('session', "7c52032f-8787-45f3-86a0-ebdf3bb51713");
        });
        this.socket.on('error', (error) => {
            this.onError(error);
        });

        // Server Messages
        this.socket.on('set information', (info) => {
            this.handleSetInformation(info);
        });
    }

    onError(error: string): void {
        console.log(`Error with connection ${error}`);
    }

    handleSetInformation(info: SetInformation) {
        this.client.Id = info.userID;
        this.client.username = info.name;
        this.client.systemName = info.systemName;
        this.client.avatar = info.avatar;

        // TODO: handle changes
    }
}

export default Network;