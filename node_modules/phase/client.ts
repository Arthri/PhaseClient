import Network from 'phase/network';
import User from 'phase/user';
import ElementIdentifiers from 'phase/elementidentifiers';
import PageModel from 'phase/pagemodel';
import Discussion from 'phase/discussion';

class Client {
    private id: number;
    private username: string;
    private systemName: string;
    private onlineUsers: Array<User>;
    private avatar: string;
    private network: Network;
    private pageModel: PageModel;
    private discussions: Array<Discussion>;

    constructor(options: Object) {
        this.discussions = [];
        this.onlineUsers = [];
        this.network = new Network(this, options);
        this.pageModel = new PageModel(this);
    }

    public setId(id: number): void {
        this.id = id;
    }

    public getId(): number {
        return this.id;
    }

    public setUsername(username: string): void {
        this.username = username;
        this.pageModel.updateUsername(username);
    }

    public getUsername(): string {
        return this.username;
    }

    public setSystemName(systemName: string): void {
        this.systemName = systemName;
    }

    public getSystemName(): string {
        return this.systemName;
    }

    public getOnlineUsers(): Array<User> {
        return this.onlineUsers;
    }

    public getAvatar(): string {
        return this.avatar;
    }

    public getPageModel(): PageModel {
        return this.pageModel;
    }
    
    public getDiscussions(): Array<Discussion> {
        return this.discussions;
    }

    /* Updates the users avatar in the chat input area */
    public setAvatar(avatar: string): void {
        this.avatar = avatar;
        this.pageModel.updateAvatar(avatar);
        this.pageModel.refreshUsersOnlineList();
    }

    /* Appends a discussion to the clients list of discussions and updates page */
    public addDiscussion(discussion: Discussion): void {
        this.discussions.push(discussion)
        this.pageModel.prependDiscussionsList(discussion);
    }
}

export default Client;