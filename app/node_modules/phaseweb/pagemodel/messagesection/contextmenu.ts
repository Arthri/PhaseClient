import * as $ from "jquery";
import Client from "phaseclient/client";
import ElementIdentifiers from "phaseweb/elementidentifiers";
import Translator from "phaseweb/translator";

class ContextMenu {
    private _translator: Translator = new Translator();
    private _contextMenuMessageId: number;
    private _client: Client;

    constructor(client: Client) {
        this._client = client;
    }

    public registerEvents(): void {
        this.registerPageClick();
        this.registerMessageContextMenu();
        this.registerTranslateClick();
        this.registerCopyMessageLinkClick();
    }

    /**
     * Hides the context menu
     */
    public hide(): void {
        $(ElementIdentifiers.ContextMenu.menu).offset({
            left: -500,
            top: -500
        });
    }

    /**
     * Clears the context menu when the page is clicked
     */
    private registerPageClick(): void {
        $("body").on("click", () => {
            this.hide();
        });
    }

    /**
     * Binds the context menu appearing to right clicking a message entry
     */
    private registerMessageContextMenu(): void {
        const self = this;

        $(ElementIdentifiers.ChatSection.list).on("contextmenu", "li", function(e) {
            const selection = window.getSelection().toString();
            if (!$(this).hasClass("in-progress") && selection.length === 0 && !$(e.target).parent().hasClass("chat-message-info")
                && !$(e.target).is("a") && !$(e.target).is("img")) {
                e.preventDefault();
                $(ElementIdentifiers.ContextMenu.menu)
                    .offset({
                        left: e.pageX,
                        top: e.pageY
                    });

                self._contextMenuMessageId = parseInt($(this).attr("id"));
            }
        });
    }

    /**
     * Translates text when the context menu item is clicked
     */
    private registerTranslateClick(): void {
        $(ElementIdentifiers.ContextMenu.translate).on("click", () => {
            const element = $(`#${this._contextMenuMessageId}`).find(ElementIdentifiers.Message.content);
            const lines = element.children().toArray();

            const messageId = this._contextMenuMessageId;
            for (const line of lines) {
                this._translator.translate($(line).text(), "en")
                    .then((translatedMessage: string) => {
                        $(line).text(translatedMessage);
                    })
                    .catch((e: Error) => {
                        console.log(e);
                    });
            }
        });
    }

    private registerCopyMessageLinkClick(): void {
        $(ElementIdentifiers.ContextMenu.messageLink).on("click", () => {
            const elem = $(`<input type="text" value="https://phase.dark-gaming.com/#messageref_${this._contextMenuMessageId}" />`);
            $("body").append(elem);
            (elem[0] as HTMLInputElement).select();
            document.execCommand("copy");
            elem.remove();
        });
    }
}

export default ContextMenu;
