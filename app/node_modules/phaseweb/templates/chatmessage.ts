import Discussion from "phaseclient/discussion";
import Message from "phaseclient/message";
import Client from "phaseweb/client";
import ElementIdentifiers from "phaseweb/elementidentifiers";
import Hash from "phaseweb/hash";

export default function ChatMessage(client: Client, discussion: Discussion, message: Message) {
    const accountName = message.getGuestname().asIs().length > 0 && message.getUsername().asIs().length > 0 ? message.getUsername() : "";
    const displayName = message.getDisplayName().getContentWithHtmlEscaped();

    // Remove chat tags from name if they exist to "clean it up"
    const strippedName = displayName.replace(/\[(?:.*?):(.*?)]/g, "$1");
    const nameWasStripped = strippedName !== displayName;
    const visualStrippedIcon = nameWasStripped
        ? `<span class="chat-name-asterisk" title="${displayName}">*</span>`
        : "";

    const useSystemName = message.getSystemName() !== client.getSystemName() && message.getSystemName() !== null;
    const systemName = message.getSystemName();
    const useTag = message.getTag().length > 0;
    const tag = message.getTag();
    const tagColour = message.getTagColour();
    const chatMessage = message.getContentStyled();

    // Flags
    const isCreator = message.getUserId() === discussion.getCreator();
    const isMod = discussion.getModerators()[message.getUserId()];
    const isGuest = message.getUsername().asIs().length === 0 && message.getGuestname().asIs().length > 0;

    const guestClass = isGuest ? ` ${ElementIdentifiers.Message.guest.substr(1)}` : "";
    const creatorClass = isCreator ? ` ${ElementIdentifiers.Message.creator.substr(1)}` : "";
    const modClass = isMod ? ` ${ElementIdentifiers.Message.moderator.substr(1)}` : "";
    const creatorOrModClass = isCreator ? creatorClass : modClass;

    // Terraria User
    const isInTerraria = client.getTerrariaUsers()[displayName];
    const terrariaStatusClass = isInTerraria
        ? ElementIdentifiers.Message.terrariaOnline.substr(1)
        : ElementIdentifiers.Message.terrariaOffline.substr(1);
    const statusServer = isInTerraria
        ? ` style="background: ${client.getTerrariaUsers()[displayName].getTagColour()}"`
        : "";
    let terrariaStatus = "";
    if (useTag && !useSystemName) {
        terrariaStatus = `<div class="${terrariaStatusClass} ${ElementIdentifiers.Message.terrariaStatus.substr(1)} `
          + `chat-terraria-${Hash(displayName)}"${statusServer}></div>`;
    }

    let templatedMessage = "";

    if (client.getConfiguration().shrinkJoinLeaveMessages && message.getUserId() === -2) {
        templatedMessage = `
        <li id="${message.getId()}">
            <div class="${ElementIdentifiers.Message.avatar.substr(1)}">
                <div class="${ElementIdentifiers.Message.info.substr(1)}">`
                    + `${(useTag ? `<span style="margin-right: 5px; color: ${tagColour}">${tag}</span>` : ``)}`
                + `</div>
            </div>
            <div class="chat-message-right">
                <div class="chat-message-content">${chatMessage}</div>
            </div>
            <div style="clear: both; content: ' '; height: 0"></div>
        </li>`;
    } else {
        templatedMessage = `
        <li id="${message.getId()}">
            <div class="${ElementIdentifiers.Message.avatar.substr(1)}">
                <img class="avatar_${message.getUserId()}"
                     src="${message.getAvatar()}"
                     onError="this.onerror=null;this.src='https://t.dark-gaming.com:3001/img/question-mark.jpg';">
                ${terrariaStatus}
            </div>
            <div class="chat-message-right">
                <div class="${ElementIdentifiers.Message.info.substr(1)}">`
                    + `<span class="chat-name${creatorOrModClass}${guestClass}"
                             title="${accountName}">${strippedName}${visualStrippedIcon}</span>`
                    + `${(useSystemName ? `<span class="systemSuffix">@${systemName}</span>` : ``)}`
                    + `<span class="chat-timestamp">${message.getFormattedTimestamp()}</span>`
                    + `${(useTag ? `<span style="margin-left: 5px; color: ${tagColour}">${tag}</span>` : ``)}`
                + `</div>
                <div class="chat-message-content">${chatMessage}</div>
            </div>
            <div style="clear: both; content: ' '; height: 0"></div>
        </li>`;
    }

    return templatedMessage;
}
