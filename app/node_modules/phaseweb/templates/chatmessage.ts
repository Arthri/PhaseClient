import Client from 'phaseweb/client';
import Message from 'phaseclient/message';
import Discussion from 'phaseclient/discussion';
import ElementIdentifiers from 'phaseweb/elementidentifiers';
import Hash from 'phaseweb/hash';

export default function ChatMessage(client: Client, discussion: Discussion, message: Message) {
    let accountName = message.getGuestname().asIs().length > 0 && message.getUsername().asIs().length > 0 ? message.getUsername() : '';
    let displayName = message.getDisplayName().getContentWithHtmlEscaped();

    // Remove chat tags from name if they exist to "clean it up"
    let strippedName = displayName.replace(/\[(?:.*?):(.*?)]/, "$1");
    let nameWasStripped = strippedName !== displayName;
    let visualStrippedIcon = nameWasStripped ? `<span class="chat-name-asterisk" title="${displayName}">*</span>` : "";

    let useSystemName = message.getSystemName() != client.getSystemName() && message.getSystemName() !== null;
    let systemName = message.getSystemName();
    let useTag = message.getTag().length > 0;
    let tag = message.getTag();
    let tagColour = message.getTagColour();
    let chatMessage = message.getContentStyled();

    // Flags
    let isCreator = message.getUserId() === discussion.getCreator();
    let isMod = discussion.getModerators()[message.getUserId()];
    let isGuest = message.getUsername().asIs().length === 0 && message.getGuestname().asIs().length > 0;

    let guestClass = isGuest ? ` ${ElementIdentifiers.Message.guest.substr(1)}` : "";
    let creatorClass = isCreator ? ` ${ElementIdentifiers.Message.creator.substr(1)}` : "";
    let modClass = isMod ? ` ${ElementIdentifiers.Message.moderator.substr(1)}` : "";
    let creatorOrModClass = isCreator ? creatorClass : modClass;

    // Terraria User
    let isInTerraria = client.getTerrariaUsers()[displayName];
    let terrariaStatusClass = isInTerraria ? ElementIdentifiers.Message.terrariaOnline.substr(1) : ElementIdentifiers.Message.terrariaOffline.substr(1);
    let statusServer = isInTerraria ? ` style="background: ${client.getTerrariaUsers()[displayName].getTagColour()}"` : '';
    let terrariaStatus = useTag && !useSystemName
        ? `<div class="${terrariaStatusClass} ${ElementIdentifiers.Message.terrariaStatus.substr(1)} chat-terraria-${Hash(displayName, true)}"${statusServer}></div>`
        : ``;
    
    let templatedMessage = "";
    
    if (client.getConfiguration().shrinkJoinLeaveMessages && message.getUserId() == -2) {
        templatedMessage = `
        <li>
            <div class="${ElementIdentifiers.Message.avatar.substr(1)}">
                <div class="${ElementIdentifiers.Message.info.substr(1)}">`
                    +`${(useTag ? `<span style="margin-right: 5px; color: ${tagColour}">${tag}</span>` : ``)}`
                +`</div>
            </div>
            <div class="chat-message-right">
                <div class="chat-message-content">${chatMessage}</div>
            </div>
            <div style="clear: both; content: ' '; height: 0"></div>
        </li>`;
    } else {
        templatedMessage = `
        <li>
            <div class="${ElementIdentifiers.Message.avatar.substr(1)}">
                <img class="avatar_${message.getUserId()}" src="${message.getAvatar()}" onError="this.onerror=null;this.src='https://t.dark-gaming.com:3001/img/question-mark.jpg';">
                ${terrariaStatus}
            </div>
            <div class="chat-message-right">
                <div class="${ElementIdentifiers.Message.info.substr(1)}">`
                    +`<span class="chat-name${creatorOrModClass}${guestClass}" title="${accountName}">${strippedName}${visualStrippedIcon}</span>`
                    +`${(useSystemName ? `<span class="systemSuffix">@${systemName}</span>` : ``)}`
                    +`<span class="chat-timestamp">${message.getFormattedTimestamp()}</span>`
                    +`${(useTag ? `<span style="margin-left: 5px; color: ${tagColour}">${tag}</span>` : ``)}`
                +`</div>
                <div class="chat-message-content">${chatMessage}</div>
            </div>
            <div style="clear: both; content: ' '; height: 0"></div>
        </li>`;
    }

    return templatedMessage;
}