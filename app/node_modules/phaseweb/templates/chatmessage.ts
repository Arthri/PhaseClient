import Client from 'phaseweb/client';
import Message from 'phase/message';
import Discussion from 'phase/discussion';

export default function ChatMessage(client: Client, discussion: Discussion, message: Message) {
    let accountName = message.getGuestname().asIs().length > 0 && message.getUsername().asIs().length > 0 ? message.getUsername() : '';
    let displayName = message.getDisplayName().getContentWithHtmlEscaped();

    // Remove chat tags from name if they exist to "clean it up"
    let strippedName = displayName.replace(/\[(?:.*?):(.*?)]/, "$1");
    let nameWasStripped = strippedName !== displayName;
    let visualStrippedIcon = nameWasStripped ? `<span class="chat-name-asterisk" title="${displayName}">*</span>` : "";

    let useSystemName = message.getSystemName() != client.getSystemName() && message.getSystemName() !== null;
    let systemName = message.getSystemName();
    let useTag = message.getTag().length > 0;
    let tag = message.getTag();
    let tagColour = message.getTagColour();
    let chatMessage = message.getContentStyled();

    // Flags
    let isCreator = message.getUserId() === discussion.getCreator();
    let isMod = discussion.getModerators()[message.getUserId()];
    let isGuest = message.getUsername().asIs().length === 0 && message.getGuestname().asIs().length > 0;

    let guestClass = isGuest ? " chat-name-guest" : "";
    let creatorClass = isCreator ? " chat-name-creator" : "";
    let modClass = isMod ? " chat-name-moderator" : "";
    let creatorOrModClass = isCreator ? creatorClass : modClass;
    
    let templatedMessage = "";
    
    if (client.getConfiguration().shrinkJoinLeaveMessages && message.getUserId() == -2) {
        templatedMessage = `
        <li>
            <div class="chat-message-avatar">
                <div class="chat-message-info">`
                    +`${(useTag ? `<span style="margin-right: 5px; color: ${tagColour}">${tag}</span>` : ``)}`
                +`</div>
            </div>
            <div class="chat-message-right">
                <div class="chat-message-content">${chatMessage}</div>
            </div>
            <div style="clear: both; content: ' '; height: 0"></div>
        </li>`;
    } else {
        templatedMessage = `
        <li>
            <div class="chat-message-avatar">
                <img class="avatar_${message.getUserId()}" src="${message.getAvatar()}">
            </div>
            <div class="chat-message-right">
                <div class="chat-message-info">`
                    +`<span class="chat-name${creatorOrModClass}${guestClass}" title="${accountName}">${strippedName}${visualStrippedIcon}</span>`
                    +`${(useSystemName ? `<span class="systemSuffix">@${systemName}</span>` : ``)}`
                    +`<span class="chat-timestamp">${message.getFormattedTimestamp()}</span>`
                    +`${(useTag ? `<span style="margin-left: 5px; color: ${tagColour}">${tag}</span>` : ``)}`
                +`</div>
                <div class="chat-message-content">${chatMessage}</div>
            </div>
            <div style="clear: both; content: ' '; height: 0"></div>
        </li>`;
    }

    return templatedMessage;
}