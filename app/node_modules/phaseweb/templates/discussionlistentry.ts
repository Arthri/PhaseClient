import Discussion from 'phaseclient/discussion';
import SafeString from 'phaseclient/safestring';
import ElementIdentifiers from 'phaseweb/elementidentifiers';

class DiscussionListEntry {
    private _discussion: Discussion;

    constructor(discussion: Discussion) {
        this._discussion = discussion;
    }

    public getContent() {
        let recentMessageContent = <SafeString> this._discussion.getRecentMessage().getContent();
        let isCurrentDiscussion = this._discussion.getIsBeingViewed();
        let hasUnreadMessages = this._discussion.getHasUnreadMessages();

        let currentDiscussionClass = isCurrentDiscussion ? ` ${ElementIdentifiers.DiscussionSection.selected.substr(1)}`: '';
        let unreadDiscussionClass = hasUnreadMessages && !isCurrentDiscussion ? ` ${ElementIdentifiers.DiscussionSection.unread.substr(1)}` : '';

        return `
        <div class="discussion${currentDiscussionClass}${unreadDiscussionClass}" id="disc${this._discussion.getId()}">
            <div class="discussion-name">${this._discussion.getName()}</div>
            <div class="spinner-container">
                <div class="spinner">
                    <div class="bounce1"></div>
                    <div class="bounce2"></div>
                    <div class="bounce3"></div>
                </div>
                <span style="display: none" class="discussion-alert glyphicon glyphicon-exclamation-sign"></span>
            </div>
            <div class="discussion-preview">${this._discussion.getRecentMessage().getDisplayName().getContentWithHtmlEscaped()}: ${recentMessageContent.withoutBbcodeAndHtml()}</div>
        </div>`;
    }
}

export default DiscussionListEntry;