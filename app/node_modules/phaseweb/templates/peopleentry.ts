import Client from "phaseclient/client";
import Discussion from "phaseclient/discussion";
import User from "phaseclient/user";
import UserStatus from "phasecore/userstatus";
import ElementIdentifiers from "phaseweb/elementidentifiers";
import Hash from "phaseweb/hash";

class PeopleEntry {
    private _user: User;
    private _isCreator: boolean;
    private _discussion: Discussion | null = null;
    private _client: Client;

    constructor(client: Client, user: User, discussion: Discussion | null) {
        this._user = user;
        this._client = client;

        if (discussion !== null) {
            this._isCreator = discussion.creator === user.id;
            this._discussion = discussion;
        } else {
            this._isCreator = false;
        }
    }

    /**
     * Gets the online staus of a terraria user's message in HTML form
     */
    private getTerrariaStatus(): string {
        const displayName = this._user.name;
        const isInTerraria = this._client.terrariaUsers[displayName];
        const terrariaStatusClass = isInTerraria
            ? ElementIdentifiers.Message.terrariaOnline.substr(1)
            : ElementIdentifiers.Message.terrariaOffline.substr(1);
        const statusServer = isInTerraria
            ? ` style="background: ${this._client.terrariaUsers[displayName].tagColour}"`
            : "";
        const terrariaStatus = `<div class="${terrariaStatusClass} ${ElementIdentifiers.Message.terrariaStatus.substr(1)} `
            + `chat-terraria-${Hash(displayName)}"${statusServer}></div>`;

        return terrariaStatus;
    }

    private isModerator(): boolean {
        if (this._discussion !== null) {
            return this._discussion.moderators[this._user.id.toString()];
        }

        return false;
    }

    private getModIcon(): string {
        let icon = "";
        if (this._discussion !== null) {
            if (this.isModerator()) {
                if (this.clientIsMod()) {
                    icon = `<span class="mod ${ElementIdentifiers.PeopleSection.modDemoteIcon.substr(1)} __web-inspector-hide-shortcut__" data-toggle="tooltip" data-placement="left" title="" data-original-title="Click to demote this user">♔</span>`;
                } else {
                    icon = `<span class="mod" data-toggle="tooltip" data-placement="left" title="" data-original-title="Discussion Moderator">♔</span>`;
                }
            } else if (this.clientIsMod()) {
                icon = `<span class="${ElementIdentifiers.PeopleSection.modPromoteIcon.substr(1)}" data-toggle="tooltip" data-placement="left" title="" data-original-title="Make user Moderator">♔</span>`;
            }
        }

        return icon;
    }

    private getRemoveUserIcon(): string {
        let icon = "";
        if (this._discussion !== null) {
            if (this.clientIsMod() && this._user.id !== this._client.id) {
                icon = `<i class="${ElementIdentifiers.PeopleSection.discussionUserRemove.substr(1)} fa fa-minus" data-toggle="tooltip" data-placement="left" title="" data-original-title="Remove User from Discussion"></i>`;
            } else if (this._user.id === this._client.id) {
                icon = `<i class="${ElementIdentifiers.PeopleSection.discussionUserLeave.substr(1)} fa fa-minus" data-toggle="tooltip" data-placement="left" title="" data-original-title="Leave Discussion"></i>`;
            }
        }

        return icon;
    }

    private clientIsMod(): boolean {
        return this._discussion !== null &&
            (this._discussion.moderators[this._client.id] || this._discussion.creator === this._client.id);
    }

    public getContent(): string {
        const iconClass = this._user.status === UserStatus.Offline ? " user-status-offline" : "";
        const title = this._user.status === UserStatus.Offline ? "Offline" : "Online";
        const creatorClass = this._isCreator ? ` ${ElementIdentifiers.PeopleSection.peopleUsernameCreator.substr(1)}` : "";
        const moderatorClass = this.isModerator() ? ` ${ElementIdentifiers.PeopleSection.peopleUsernameMod.substr(1)}` : "";
        const creatorOrModClass = this._isCreator ? creatorClass : moderatorClass;

        return `
        <li>
            <div class="people_user_avatar">
                <img class="avatar_${this._user.id}" src="${this._user.avatar}"/>
                ${this.getTerrariaStatus()}
            </div>
            <div class="people_user_right">
                <span class="${ElementIdentifiers.PeopleSection.peopleUsername.substr(1)}${creatorOrModClass}">${this._user.formatName}</span>
                <i class="fa fa-circle${iconClass}" data-toggle="tooltip" data-placement="left" title="${title}"></i>
                ${this.getRemoveUserIcon()}
                ${this.getModIcon()}
            </div>
        </li>`;
    }
}

export default PeopleEntry;
