/**
 * Hashes a given string
 * 
 * @param str The input string to hash
 * @param asString Whether or not the output should be a string
 * @param seed The seed for the hash
 */
function hashFnv32a(str: string, asString: boolean = false, seed?: number) {
    var i, l,
        hval = (seed === undefined) ? 0x811c9dc5 : seed;

    for (i = 0, l = str.length; i < l; i++) {
        hval ^= str.charCodeAt(i);
        hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);
    }
    if( asString ){
        // Convert to 8 digit hex string
        return ("0000000" + (hval >>> 0).toString(16)).substr(-8);
    }
    return hval >>> 0;
}

function checksum(str: string) {
	var hash = 0,
        strlen = str.length,
        i,
        c;

    if (strlen === 0) {
    	return hash;
    }

    for (i = 0; i < strlen; i++) {
        c = str.charCodeAt(i);
        hash = ((hash<<5)-hash)+c;
        hash = hash & hash; // Convert to 32bit integer
    }

	return (hash+2147483647).toString();
}

export default checksum;