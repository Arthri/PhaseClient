import Discussion from "phaseclient/discussion";
import Message from "phaseclient/message";

class Search {
    private readonly _terms: string;
    private readonly _discussion: Discussion;
    private _oldestId: number | null | undefined;
    private readonly _username: string | undefined;
    private readonly _systemName: string | undefined;
    private _messages: Message[] = [];
    private _inProgress: boolean = true;

    constructor(terms: string, discussion: Discussion, oldestId?: number, username?: string, systemName?: string) {
        this._terms = terms;
        this._discussion = discussion;
        this._oldestId = oldestId;
        this._username = username;
        this._systemName = systemName;
    }

    public getTerms(): string {
        return this._terms;
    }

    public getDiscussion(): Discussion {
        return this._discussion;
    }

    public getMessages(): Message[] {
        return this._messages;
    }

    public getOldestId(): number | null | undefined {
        return this._oldestId;
    }

    public getUsername(): string | undefined {
        return this._username;
    }

    public getSystemName(): string | undefined {
        return this._systemName;
    }

    public getInProgress(): boolean {
        return this._inProgress;
    }

    public clearMessages(): void {
        this._messages = [];
    }

    public addMessages(messages: Message[]): void {
        this._messages = this._messages.concat(messages);
    }

    public prependMessages(messages: Message[]): void {
        this._messages = messages.concat(this._messages);
    }

    public setOldestId(oldestId: number | null): void {
        this._oldestId = oldestId;
    }

    public setInProgress(inProgress: boolean): void {
        this._inProgress = inProgress;
    }
}

export default Search;
