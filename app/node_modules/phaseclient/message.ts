import CoreMessage from 'phasecore/message';
import * as Moment from 'moment';
import Utils from 'phasecore/utils';
import SafeString from 'phaseclient/safestring';
import BBCode from 'phaseclient/bbcode';

class Message extends CoreMessage {
    private _id: number;
    private _formattedTimestamp: string;
    private _contentStyled: string;
    protected isInProgress: boolean;

    constructor(id: number, userId: number, avatar: string, username: string, guestname: string, content: string, timestamp: number, systemName: string, tag: string, tagColour: string) {
        super(userId, avatar, username, guestname, content, timestamp, systemName, tag, tagColour);
        
        this._id = id;
        this.username = new SafeString(username);
        this.guestname = new SafeString(guestname);
        this.content = new SafeString(content);
        this.isInProgress = false;
    }

    /**
     * Gets a unique id for this message
     */
    public getId(): number {
        return this._id;
    }

    /* Gets a timestamp like "Saturday at 7:16 PM" */
    public getFormattedTimestamp(): string {
        if (!this._formattedTimestamp)  {
            this._formattedTimestamp = Moment(this.getTimestamp()*1000).calendar("", {
                sameDay: "[Today at] LT",
                lastWeek: "dddd [at] LT",
                sameElse: "LT, dddd Do MMM, YYYY"
            });
        }

        return this._formattedTimestamp;
    }

    public setContent(content: string): void {
        super.setContent(content);
        this._contentStyled = "";
    }

    /* Get BBCode formatted content */
    public getContentStyled(): string {
        if (!this._contentStyled) {
            this._contentStyled = BBCode.convertText(this.getContent().getContentWithHtmlEscaped());
        }

        return this._contentStyled;
    }

    public getIsInProgress(): boolean {
        return this.isInProgress;
    }
}

export default Message;