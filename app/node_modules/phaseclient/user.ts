import Config from "phaseclient/config";
import CoreUser from "phasecore/user";
import UserStatus from "phasecore/userstatus";
import Utils from "phasecore/utils";

class User extends CoreUser {
    private _formatName: string;
    private _formatNameNoBbcode: string;
    private _lowerCaseName: string;
    private _lastOnline: number;
    private _lastInGame: number;

    constructor(id: string, name: string, systemName: string, avatar: string, clientSystemName: string, status: UserStatus, config: Config) {
        super(id, name, systemName, avatar, status);

        // Users from other systems will have a suffix to show for it
        if (systemName !== clientSystemName && config.displayOtherSystemsNames) {
            this._formatName = `${Utils.htmlspecialchars(name)}<i class="systemSuffix">@${systemName}</i>`;
            this._formatNameNoBbcode = `${Utils.htmlspecialchars(name)}@${systemName}`;
        } else {
            this._formatName = Utils.htmlspecialchars(name);
            this._formatNameNoBbcode = this._formatName;
        }

        this._lowerCaseName = name.toLowerCase();
    }

    /**
     * Gets the username combined with an appropriate system name for this user
     */
    public get formatName(): string {
        return this._formatName;
    }

    /**
     * Gets the username combined with an appropriate system name for this user
     */
    public get formatNameNoBbcode(): string {
        return this._formatNameNoBbcode;
    }

    /**
     * Gets the username in lowercase
     */
    public get lowerCaseName(): string {
        return this._lowerCaseName;
    }

    /**
     * Gets the last time this user was online on Phase
     *
     * @return The unix timestamp of the last time this user was on Phase
     */
    public get lastOnline(): number {
        return this._lastOnline;
    }

    /**
     * Gets the last time this user was online in-game
     *
     * @return The unix timestamp of the last time this user was in-game
     */
    public get lastInGame(): number {
        return this._lastOnline;
    }

    /**
     * Updates the last time this user was on Phase
     *
     * @param lastOnline The last time this user was online on Phase
     */
    public set lastOnline(lastOnline: number) {
        this._lastOnline = lastOnline;
    }

    /**
     * Updates the last time this user was in-game
     *
     * @param lastInGame The last time this user was online in-game
     */
    public set lastInGame(lastInGame: number) {
        this._lastInGame = lastInGame;
    }
}

export default User;
